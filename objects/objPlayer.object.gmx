<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTankHitbox</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// initialize variables
hsp = 0;
vsp = 0;
spd = 6;
rot = 0;
frame = 0;
add = 0;
addSign = 0;
scale = 1;
jumpSpd = 24;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// DEBUG STUFF
if(keyboard_check_pressed(ord('R'))) { game_restart(); }
if(mouse_check_button_pressed(mb_left))
{
    with(instance_create(mouse_x, mouse_y, LightSource))
    {
        // color n radius
        depth = other.depth-1;
    }
}

// set keys
keyRight = keyboard_check(vk_right);
keyLeft = -keyboard_check(vk_left);
keyJump = keyboard_check_pressed(vk_space);
keyJumpHeld = keyboard_check(vk_space);

// horizontal speed
hsp = (keyRight + keyLeft) * spd;

// jumping
if (place_meeting(x,y+1,objWall)) {
    vsp = keyJumpHeld * -(jumpSpd);
} else vsp += 1;

if (vsp &lt; 0) &amp;&amp; (!keyJumpHeld) vsp = max(vsp,0);

// collision
if (place_meeting(x+hsp,y,objWall)) hsp = 0;
if (place_meeting(x,y+vsp,objWall)) vsp = 0;

// add hsp and vsp
x += hsp;
y += vsp;

create_cam(); // create the camera if it doesn't already exist

image_speed = sign(hsp);

if (hsp != 0) add += addSign;

if (add &gt; .5) addSign = -.1;
if (add &lt; -.5) addSign = .1;

if hsp !=  0 rot += sign(hsp) / 16 else rot /= 1.25;

rot = clamp(rot,-5,5);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hsp == 0) frame = 0 else if (vsp == 0) frame += .2;
if (sign(hsp) == 1) scale = 1 else if (sign(hsp) == -1) scale = -1;

// Draw tank parts
draw_sprite(sprTankTread, frame, x, y + (sprite_get_height(sprTankTread) / 2) + 12);
draw_sprite_ext(sprTankHeadpiece, frame, x, y - (sprite_get_height(sprTankHeadpiece) / 2) - 18 + add, scale, 1, add + rot, c_white, 1);
draw_sprite_ext(sprTankBody, frame, x + add, y, scale, 1, add + rot, c_white, 1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
