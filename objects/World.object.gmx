<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// controls
keyUp = ord("W");
keyLeft = ord("A");
keyDown = ord("S");
keyRight = ord("D");
keyRotCW = ord("E");
keyRotCCW = ord("Q");
keyToolUp = vk_up;
keyToolLeft = vk_left;
keyToolDown = vk_down;
keyToolRight = vk_right;

// world
World.surTerrain = noone;
width = room_width;
height = room_height*2;
world_generate(width, height);

// particles
World.maxParticles = 320;
World.particles_gravity = 0.25;
for(var i = 0; i &lt; World.maxParticles; i += 1)
{
    World.particle_x[i] = 0;
    World.particle_y[i] = 0;
    //World.particle_dir[i] = 0;
    //World.particle_spd[i] = 0;
    World.particle_hspd[i] = 0;
    World.particle_vspd[i] = 0;
    World.particle_col[i] = 0;
    World.particle_vis[i] = 0;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// DEBUG
if(keyboard_check_pressed(ord('R'))) game_restart();

if(mouse_check_button(mb_left))
{
    world_carve_circle(mouse_x, mouse_y, 20, 1);
}
if(mouse_check_button(mb_right))
{
    // particles
    var _dir = random(360);
    var _hspd = lengthdir_x(random(4), _dir);
    var _vspd = lengthdir_y(random(4), _dir);
    var _col = make_color_hsv(random(255), 255, 255);
    particle_spawn(mouse_x, mouse_y, _hspd, _vspd, _col);
}

if(instance_exists(Player))
{
    view_yview = clamp(Player.y-view_hview/2, 0, height-view_hview);
}

// particle simulation
for(var i = 0; i &lt; World.maxParticles; i += 1)
{
    if(!World.particle_vis[i]) break;
    else
    {
        if(World.terrain[clamp(World.particle_x[i], 0, World.width-1), clamp(World.particle_y[i], 0, World.height-1)])
        {
            World.particle_vis[i] = 0;
            
            for(var j = i+1; j &lt; World.maxParticles; j += 1)
            {
                // replace previous particle with next
                World.particle_x[j-1] = World.particle_x[j];
                World.particle_y[j-1] = World.particle_y[j];
                //World.particle_dir[j-1] = World.particle_dir[j];
                //World.particle_spd[j-1] = World.particle_spd[j];
                World.particle_hspd[j-1] = World.particle_hspd[j];
                World.particle_vspd[j-1] = World.particle_vspd[j];
                World.particle_col[j-1] = World.particle_col[j];
                World.particle_vis[j-1] = World.particle_vis[j];
                
                // reset next
                World.particle_x[j] = 0;
                World.particle_y[j] = 0;
                //World.particle_dir[j] = 0;
                //World.particle_spd[j] = 0;
                World.particle_hspd[j] = 0;
                World.particle_vspd[j] = 0;
                World.particle_col[j] = 0;
                World.particle_vis[j] = 0;
            }
        }
        else
        {
            World.particle_x[i] += World.particle_hspd[i];
            World.particle_y[i] += World.particle_vspd[i];
            World.particle_vspd[i] += World.particles_gravity;
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_surface_ext(World.surTerrain, 0, 0, 1, 1, 0, make_color_hsv(0, 0, 50), 1);
//draw_surface(World.surTerrain, 0, 0);
draw_set_color(c_white);
draw_text(view_xview, view_yview, string(fps) + "fps");

// particles
for(var i = 0; i &lt; World.maxParticles; i += 1)
{
    if(!World.particle_vis[i])
    {
        draw_text(view_xview, view_yview+16, string(i) + " particles");
        break;
    }
    else
    {
        draw_set_color(World.particle_col[i]);
        //draw_point(World.particle_x[i], World.particle_y[i]);
        draw_line_width(World.particle_x[i], World.particle_y[i],
        World.particle_x[i]-World.particle_hspd[i], World.particle_y[i]-World.particle_vspd[i],
        1.1);
    }
}
draw_set_color(c_white);

// draw lights
with(Player)
{
    light_cast(x, y, lightColor, lightRadius);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
